apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: saas-benchmarks-ingress
  namespace: saas-benchmarks-prod
  annotations:
    # Basic Ingress Configuration
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Request Size and Timeout Configurations
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://saas-benchmarks.com"
    
    # Security Headers Configuration
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https://api.saas-benchmarks.com";
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    
    # ModSecurity WAF Configuration
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On
      SecAuditEngine RelevantOnly
      SecAuditLogParts ABIJDEFHZ
    
    # Performance Optimizations
    nginx.ingress.kubernetes.io/server-snippet: |
      location / {
        limit_req zone=one burst=10 nodelay;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 60m;
        add_header X-Cache-Status $upstream_cache_status;
      }
    
    # SSL/TLS Configuration
    cert-manager.io/cluster-issuer: letsencrypt-prod
    
    # Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - saas-benchmarks.com
        - api.saas-benchmarks.com
      secretName: saas-benchmarks-tls
  rules:
    - host: saas-benchmarks.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
    - host: api.saas-benchmarks.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 3000