# Production Secrets Configuration for SaaS Benchmarks Platform
# Version: 1.0.0
# Enhanced security with AWS Secrets Manager integration and automatic rotation

---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: saas-benchmarks-prod
  labels:
    app: saas-benchmarks
    environment: production
    component: database
    encryption: aes256
  annotations:
    kubernetes.io/service-account.name: saas-benchmarks-prod
    eks.amazonaws.com/role-arn: arn:aws:iam::aws:role/saas-benchmarks-prod-secrets
    secrets.aws/auto-rotation: enabled
    secrets.aws/rotation-interval: 30d
type: Opaque
data:
  DB_HOST: ${AWS_SECRETS_MANAGER:database_credentials.host}
  DB_PORT: ${AWS_SECRETS_MANAGER:database_credentials.port}
  DB_NAME: ${AWS_SECRETS_MANAGER:database_credentials.name}
  DB_USER: ${AWS_SECRETS_MANAGER:database_credentials.username}
  DB_PASSWORD: ${AWS_SECRETS_MANAGER:database_credentials.password}

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: saas-benchmarks-prod
  labels:
    app: saas-benchmarks
    environment: production
    component: cache
    encryption: aes256
  annotations:
    kubernetes.io/service-account.name: saas-benchmarks-prod
    eks.amazonaws.com/role-arn: arn:aws:iam::aws:role/saas-benchmarks-prod-secrets
    secrets.aws/auto-rotation: enabled
    secrets.aws/rotation-interval: 30d
type: Opaque
data:
  REDIS_HOST: ${AWS_SECRETS_MANAGER:redis_credentials.host}
  REDIS_PORT: ${AWS_SECRETS_MANAGER:redis_credentials.port}
  REDIS_PASSWORD: ${AWS_SECRETS_MANAGER:redis_credentials.password}
  REDIS_TLS_ENABLED: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: google-oauth-credentials
  namespace: saas-benchmarks-prod
  labels:
    app: saas-benchmarks
    environment: production
    component: auth
    encryption: aes256
  annotations:
    kubernetes.io/service-account.name: saas-benchmarks-prod
    eks.amazonaws.com/role-arn: arn:aws:iam::aws:role/saas-benchmarks-prod-secrets
    secrets.aws/auto-rotation: enabled
    secrets.aws/rotation-interval: 30d
    auth.google/oauth-version: "2.0"
type: Opaque
data:
  GOOGLE_CLIENT_ID: ${AWS_SECRETS_MANAGER:google_oauth_credentials.client_id}
  GOOGLE_CLIENT_SECRET: ${AWS_SECRETS_MANAGER:google_oauth_credentials.client_secret}
  GOOGLE_CALLBACK_URL: ${AWS_SECRETS_MANAGER:google_oauth_credentials.callback_url}
  OAUTH_ALLOWED_DOMAINS: ${AWS_SECRETS_MANAGER:google_oauth_credentials.allowed_domains}

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: saas-benchmarks-prod
  labels:
    app: saas-benchmarks
    environment: production
    component: security
    encryption: aes256
  annotations:
    kubernetes.io/service-account.name: saas-benchmarks-prod
    eks.amazonaws.com/role-arn: arn:aws:iam::aws:role/saas-benchmarks-prod-secrets
    secrets.aws/auto-rotation: enabled
    secrets.aws/rotation-interval: 30d
type: Opaque
data:
  JWT_SECRET: ${AWS_SECRETS_MANAGER:jwt_secret.key}
  JWT_EXPIRATION: "3600"
  JWT_REFRESH_EXPIRATION: "86400"