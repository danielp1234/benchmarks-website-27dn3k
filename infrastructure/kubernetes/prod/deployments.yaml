---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: saas-benchmarks-prod
  labels:
    app: backend
    env: production
    tier: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      env: production
      tier: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: backend
        env: production
        tier: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: backend
      containers:
        - name: backend
          image: ecr.aws/saas-benchmarks/backend:latest
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m" 
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: database-credentials
            - secretRef:
                name: redis-credentials
            - secretRef:
                name: google-oauth-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: saas-benchmarks-prod
  labels:
    app: frontend
    env: production
    tier: web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
      env: production
      tier: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: frontend
        env: production
        tier: web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: frontend
      containers:
        - name: frontend
          image: ecr.aws/saas-benchmarks/frontend:latest
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          envFrom:
            - configMapRef:
                name: frontend-config