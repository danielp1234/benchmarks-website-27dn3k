# Production Horizontal Pod Autoscaler (HPA) configuration for SaaS Benchmarks Platform
# Implements auto-scaling for frontend and backend services to maintain high availability
# and performance under varying loads

# Backend API Service HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: saas-benchmarks-prod
  labels:
    app: backend
    env: production
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-deployment
  minReplicas: 3  # Ensures high availability with minimum 3 replicas
  maxReplicas: 10 # Allows scaling up to 10 replicas during high load
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Triggers scaling at 70% CPU utilization
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Triggers scaling at 80% memory utilization
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 60s before scaling up again
      policies:
        - type: Pods
          value: 2  # Add up to 2 pods at a time
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 mins before scaling down
      policies:
        - type: Pods
          value: 1  # Remove 1 pod at a time
          periodSeconds: 60

---
# Frontend React Application HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: saas-benchmarks-prod
  labels:
    app: frontend
    env: production
    component: web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-deployment
  minReplicas: 3  # Ensures high availability with minimum 3 replicas
  maxReplicas: 8  # Allows scaling up to 8 replicas during high load
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Triggers scaling at 70% CPU utilization
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Triggers scaling at 80% memory utilization
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 60s before scaling up again
      policies:
        - type: Pods
          value: 2  # Add up to 2 pods at a time
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 mins before scaling down
      policies:
        - type: Pods
          value: 1  # Remove 1 pod at a time
          periodSeconds: 60